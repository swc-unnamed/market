
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `AuctionLive` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model AuctionLive
 * 
 */
export type AuctionLiveModel = runtime.Types.Result.DefaultSelection<Prisma.$AuctionLivePayload>

export type AggregateAuctionLive = {
  _count: AuctionLiveCountAggregateOutputType | null
  _min: AuctionLiveMinAggregateOutputType | null
  _max: AuctionLiveMaxAggregateOutputType | null
}

export type AuctionLiveMinAggregateOutputType = {
  id: string | null
  startTime: Date | null
  title: string | null
  description: string | null
  moderatorId: string | null
  createdAt: Date | null
  endedAt: Date | null
}

export type AuctionLiveMaxAggregateOutputType = {
  id: string | null
  startTime: Date | null
  title: string | null
  description: string | null
  moderatorId: string | null
  createdAt: Date | null
  endedAt: Date | null
}

export type AuctionLiveCountAggregateOutputType = {
  id: number
  startTime: number
  title: number
  description: number
  moderatorId: number
  createdAt: number
  endedAt: number
  _all: number
}


export type AuctionLiveMinAggregateInputType = {
  id?: true
  startTime?: true
  title?: true
  description?: true
  moderatorId?: true
  createdAt?: true
  endedAt?: true
}

export type AuctionLiveMaxAggregateInputType = {
  id?: true
  startTime?: true
  title?: true
  description?: true
  moderatorId?: true
  createdAt?: true
  endedAt?: true
}

export type AuctionLiveCountAggregateInputType = {
  id?: true
  startTime?: true
  title?: true
  description?: true
  moderatorId?: true
  createdAt?: true
  endedAt?: true
  _all?: true
}

export type AuctionLiveAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which AuctionLive to aggregate.
   */
  where?: Prisma.AuctionLiveWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AuctionLives to fetch.
   */
  orderBy?: Prisma.AuctionLiveOrderByWithRelationInput | Prisma.AuctionLiveOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.AuctionLiveWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AuctionLives from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AuctionLives.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned AuctionLives
  **/
  _count?: true | AuctionLiveCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: AuctionLiveMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: AuctionLiveMaxAggregateInputType
}

export type GetAuctionLiveAggregateType<T extends AuctionLiveAggregateArgs> = {
      [P in keyof T & keyof AggregateAuctionLive]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAuctionLive[P]>
    : Prisma.GetScalarType<T[P], AggregateAuctionLive[P]>
}




export type AuctionLiveGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AuctionLiveWhereInput
  orderBy?: Prisma.AuctionLiveOrderByWithAggregationInput | Prisma.AuctionLiveOrderByWithAggregationInput[]
  by: Prisma.AuctionLiveScalarFieldEnum[] | Prisma.AuctionLiveScalarFieldEnum
  having?: Prisma.AuctionLiveScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: AuctionLiveCountAggregateInputType | true
  _min?: AuctionLiveMinAggregateInputType
  _max?: AuctionLiveMaxAggregateInputType
}

export type AuctionLiveGroupByOutputType = {
  id: string
  startTime: Date
  title: string
  description: string | null
  moderatorId: string
  createdAt: Date
  endedAt: Date | null
  _count: AuctionLiveCountAggregateOutputType | null
  _min: AuctionLiveMinAggregateOutputType | null
  _max: AuctionLiveMaxAggregateOutputType | null
}

type GetAuctionLiveGroupByPayload<T extends AuctionLiveGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AuctionLiveGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof AuctionLiveGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AuctionLiveGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AuctionLiveGroupByOutputType[P]>
      }
    >
  > 



export type AuctionLiveWhereInput = {
  AND?: Prisma.AuctionLiveWhereInput | Prisma.AuctionLiveWhereInput[]
  OR?: Prisma.AuctionLiveWhereInput[]
  NOT?: Prisma.AuctionLiveWhereInput | Prisma.AuctionLiveWhereInput[]
  id?: Prisma.StringFilter<"AuctionLive"> | string
  startTime?: Prisma.DateTimeFilter<"AuctionLive"> | Date | string
  title?: Prisma.StringFilter<"AuctionLive"> | string
  description?: Prisma.StringNullableFilter<"AuctionLive"> | string | null
  moderatorId?: Prisma.StringFilter<"AuctionLive"> | string
  createdAt?: Prisma.DateTimeFilter<"AuctionLive"> | Date | string
  endedAt?: Prisma.DateTimeNullableFilter<"AuctionLive"> | Date | string | null
  moderator?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  listings?: Prisma.AuctionListingListRelationFilter
}

export type AuctionLiveOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  moderatorId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  endedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  moderator?: Prisma.UserOrderByWithRelationInput
  listings?: Prisma.AuctionListingOrderByRelationAggregateInput
}

export type AuctionLiveWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.AuctionLiveWhereInput | Prisma.AuctionLiveWhereInput[]
  OR?: Prisma.AuctionLiveWhereInput[]
  NOT?: Prisma.AuctionLiveWhereInput | Prisma.AuctionLiveWhereInput[]
  startTime?: Prisma.DateTimeFilter<"AuctionLive"> | Date | string
  title?: Prisma.StringFilter<"AuctionLive"> | string
  description?: Prisma.StringNullableFilter<"AuctionLive"> | string | null
  moderatorId?: Prisma.StringFilter<"AuctionLive"> | string
  createdAt?: Prisma.DateTimeFilter<"AuctionLive"> | Date | string
  endedAt?: Prisma.DateTimeNullableFilter<"AuctionLive"> | Date | string | null
  moderator?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  listings?: Prisma.AuctionListingListRelationFilter
}, "id">

export type AuctionLiveOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  moderatorId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  endedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.AuctionLiveCountOrderByAggregateInput
  _max?: Prisma.AuctionLiveMaxOrderByAggregateInput
  _min?: Prisma.AuctionLiveMinOrderByAggregateInput
}

export type AuctionLiveScalarWhereWithAggregatesInput = {
  AND?: Prisma.AuctionLiveScalarWhereWithAggregatesInput | Prisma.AuctionLiveScalarWhereWithAggregatesInput[]
  OR?: Prisma.AuctionLiveScalarWhereWithAggregatesInput[]
  NOT?: Prisma.AuctionLiveScalarWhereWithAggregatesInput | Prisma.AuctionLiveScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"AuctionLive"> | string
  startTime?: Prisma.DateTimeWithAggregatesFilter<"AuctionLive"> | Date | string
  title?: Prisma.StringWithAggregatesFilter<"AuctionLive"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"AuctionLive"> | string | null
  moderatorId?: Prisma.StringWithAggregatesFilter<"AuctionLive"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"AuctionLive"> | Date | string
  endedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"AuctionLive"> | Date | string | null
}

export type AuctionLiveCreateInput = {
  id?: string
  startTime: Date | string
  title: string
  description?: string | null
  createdAt?: Date | string
  endedAt?: Date | string | null
  moderator: Prisma.UserCreateNestedOneWithoutModeratedLiveAuctionsInput
  listings?: Prisma.AuctionListingCreateNestedManyWithoutLiveAuctionInput
}

export type AuctionLiveUncheckedCreateInput = {
  id?: string
  startTime: Date | string
  title: string
  description?: string | null
  moderatorId: string
  createdAt?: Date | string
  endedAt?: Date | string | null
  listings?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutLiveAuctionInput
}

export type AuctionLiveUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  moderator?: Prisma.UserUpdateOneRequiredWithoutModeratedLiveAuctionsNestedInput
  listings?: Prisma.AuctionListingUpdateManyWithoutLiveAuctionNestedInput
}

export type AuctionLiveUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  moderatorId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  listings?: Prisma.AuctionListingUncheckedUpdateManyWithoutLiveAuctionNestedInput
}

export type AuctionLiveCreateManyInput = {
  id?: string
  startTime: Date | string
  title: string
  description?: string | null
  moderatorId: string
  createdAt?: Date | string
  endedAt?: Date | string | null
}

export type AuctionLiveUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type AuctionLiveUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  moderatorId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type AuctionLiveListRelationFilter = {
  every?: Prisma.AuctionLiveWhereInput
  some?: Prisma.AuctionLiveWhereInput
  none?: Prisma.AuctionLiveWhereInput
}

export type AuctionLiveOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type AuctionLiveCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  moderatorId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  endedAt?: Prisma.SortOrder
}

export type AuctionLiveMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  moderatorId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  endedAt?: Prisma.SortOrder
}

export type AuctionLiveMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  startTime?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  moderatorId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  endedAt?: Prisma.SortOrder
}

export type AuctionLiveNullableScalarRelationFilter = {
  is?: Prisma.AuctionLiveWhereInput | null
  isNot?: Prisma.AuctionLiveWhereInput | null
}

export type AuctionLiveCreateNestedManyWithoutModeratorInput = {
  create?: Prisma.XOR<Prisma.AuctionLiveCreateWithoutModeratorInput, Prisma.AuctionLiveUncheckedCreateWithoutModeratorInput> | Prisma.AuctionLiveCreateWithoutModeratorInput[] | Prisma.AuctionLiveUncheckedCreateWithoutModeratorInput[]
  connectOrCreate?: Prisma.AuctionLiveCreateOrConnectWithoutModeratorInput | Prisma.AuctionLiveCreateOrConnectWithoutModeratorInput[]
  createMany?: Prisma.AuctionLiveCreateManyModeratorInputEnvelope
  connect?: Prisma.AuctionLiveWhereUniqueInput | Prisma.AuctionLiveWhereUniqueInput[]
}

export type AuctionLiveUncheckedCreateNestedManyWithoutModeratorInput = {
  create?: Prisma.XOR<Prisma.AuctionLiveCreateWithoutModeratorInput, Prisma.AuctionLiveUncheckedCreateWithoutModeratorInput> | Prisma.AuctionLiveCreateWithoutModeratorInput[] | Prisma.AuctionLiveUncheckedCreateWithoutModeratorInput[]
  connectOrCreate?: Prisma.AuctionLiveCreateOrConnectWithoutModeratorInput | Prisma.AuctionLiveCreateOrConnectWithoutModeratorInput[]
  createMany?: Prisma.AuctionLiveCreateManyModeratorInputEnvelope
  connect?: Prisma.AuctionLiveWhereUniqueInput | Prisma.AuctionLiveWhereUniqueInput[]
}

export type AuctionLiveUpdateManyWithoutModeratorNestedInput = {
  create?: Prisma.XOR<Prisma.AuctionLiveCreateWithoutModeratorInput, Prisma.AuctionLiveUncheckedCreateWithoutModeratorInput> | Prisma.AuctionLiveCreateWithoutModeratorInput[] | Prisma.AuctionLiveUncheckedCreateWithoutModeratorInput[]
  connectOrCreate?: Prisma.AuctionLiveCreateOrConnectWithoutModeratorInput | Prisma.AuctionLiveCreateOrConnectWithoutModeratorInput[]
  upsert?: Prisma.AuctionLiveUpsertWithWhereUniqueWithoutModeratorInput | Prisma.AuctionLiveUpsertWithWhereUniqueWithoutModeratorInput[]
  createMany?: Prisma.AuctionLiveCreateManyModeratorInputEnvelope
  set?: Prisma.AuctionLiveWhereUniqueInput | Prisma.AuctionLiveWhereUniqueInput[]
  disconnect?: Prisma.AuctionLiveWhereUniqueInput | Prisma.AuctionLiveWhereUniqueInput[]
  delete?: Prisma.AuctionLiveWhereUniqueInput | Prisma.AuctionLiveWhereUniqueInput[]
  connect?: Prisma.AuctionLiveWhereUniqueInput | Prisma.AuctionLiveWhereUniqueInput[]
  update?: Prisma.AuctionLiveUpdateWithWhereUniqueWithoutModeratorInput | Prisma.AuctionLiveUpdateWithWhereUniqueWithoutModeratorInput[]
  updateMany?: Prisma.AuctionLiveUpdateManyWithWhereWithoutModeratorInput | Prisma.AuctionLiveUpdateManyWithWhereWithoutModeratorInput[]
  deleteMany?: Prisma.AuctionLiveScalarWhereInput | Prisma.AuctionLiveScalarWhereInput[]
}

export type AuctionLiveUncheckedUpdateManyWithoutModeratorNestedInput = {
  create?: Prisma.XOR<Prisma.AuctionLiveCreateWithoutModeratorInput, Prisma.AuctionLiveUncheckedCreateWithoutModeratorInput> | Prisma.AuctionLiveCreateWithoutModeratorInput[] | Prisma.AuctionLiveUncheckedCreateWithoutModeratorInput[]
  connectOrCreate?: Prisma.AuctionLiveCreateOrConnectWithoutModeratorInput | Prisma.AuctionLiveCreateOrConnectWithoutModeratorInput[]
  upsert?: Prisma.AuctionLiveUpsertWithWhereUniqueWithoutModeratorInput | Prisma.AuctionLiveUpsertWithWhereUniqueWithoutModeratorInput[]
  createMany?: Prisma.AuctionLiveCreateManyModeratorInputEnvelope
  set?: Prisma.AuctionLiveWhereUniqueInput | Prisma.AuctionLiveWhereUniqueInput[]
  disconnect?: Prisma.AuctionLiveWhereUniqueInput | Prisma.AuctionLiveWhereUniqueInput[]
  delete?: Prisma.AuctionLiveWhereUniqueInput | Prisma.AuctionLiveWhereUniqueInput[]
  connect?: Prisma.AuctionLiveWhereUniqueInput | Prisma.AuctionLiveWhereUniqueInput[]
  update?: Prisma.AuctionLiveUpdateWithWhereUniqueWithoutModeratorInput | Prisma.AuctionLiveUpdateWithWhereUniqueWithoutModeratorInput[]
  updateMany?: Prisma.AuctionLiveUpdateManyWithWhereWithoutModeratorInput | Prisma.AuctionLiveUpdateManyWithWhereWithoutModeratorInput[]
  deleteMany?: Prisma.AuctionLiveScalarWhereInput | Prisma.AuctionLiveScalarWhereInput[]
}

export type AuctionLiveCreateNestedOneWithoutListingsInput = {
  create?: Prisma.XOR<Prisma.AuctionLiveCreateWithoutListingsInput, Prisma.AuctionLiveUncheckedCreateWithoutListingsInput>
  connectOrCreate?: Prisma.AuctionLiveCreateOrConnectWithoutListingsInput
  connect?: Prisma.AuctionLiveWhereUniqueInput
}

export type AuctionLiveUpdateOneWithoutListingsNestedInput = {
  create?: Prisma.XOR<Prisma.AuctionLiveCreateWithoutListingsInput, Prisma.AuctionLiveUncheckedCreateWithoutListingsInput>
  connectOrCreate?: Prisma.AuctionLiveCreateOrConnectWithoutListingsInput
  upsert?: Prisma.AuctionLiveUpsertWithoutListingsInput
  disconnect?: Prisma.AuctionLiveWhereInput | boolean
  delete?: Prisma.AuctionLiveWhereInput | boolean
  connect?: Prisma.AuctionLiveWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.AuctionLiveUpdateToOneWithWhereWithoutListingsInput, Prisma.AuctionLiveUpdateWithoutListingsInput>, Prisma.AuctionLiveUncheckedUpdateWithoutListingsInput>
}

export type AuctionLiveCreateWithoutModeratorInput = {
  id?: string
  startTime: Date | string
  title: string
  description?: string | null
  createdAt?: Date | string
  endedAt?: Date | string | null
  listings?: Prisma.AuctionListingCreateNestedManyWithoutLiveAuctionInput
}

export type AuctionLiveUncheckedCreateWithoutModeratorInput = {
  id?: string
  startTime: Date | string
  title: string
  description?: string | null
  createdAt?: Date | string
  endedAt?: Date | string | null
  listings?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutLiveAuctionInput
}

export type AuctionLiveCreateOrConnectWithoutModeratorInput = {
  where: Prisma.AuctionLiveWhereUniqueInput
  create: Prisma.XOR<Prisma.AuctionLiveCreateWithoutModeratorInput, Prisma.AuctionLiveUncheckedCreateWithoutModeratorInput>
}

export type AuctionLiveCreateManyModeratorInputEnvelope = {
  data: Prisma.AuctionLiveCreateManyModeratorInput | Prisma.AuctionLiveCreateManyModeratorInput[]
  skipDuplicates?: boolean
}

export type AuctionLiveUpsertWithWhereUniqueWithoutModeratorInput = {
  where: Prisma.AuctionLiveWhereUniqueInput
  update: Prisma.XOR<Prisma.AuctionLiveUpdateWithoutModeratorInput, Prisma.AuctionLiveUncheckedUpdateWithoutModeratorInput>
  create: Prisma.XOR<Prisma.AuctionLiveCreateWithoutModeratorInput, Prisma.AuctionLiveUncheckedCreateWithoutModeratorInput>
}

export type AuctionLiveUpdateWithWhereUniqueWithoutModeratorInput = {
  where: Prisma.AuctionLiveWhereUniqueInput
  data: Prisma.XOR<Prisma.AuctionLiveUpdateWithoutModeratorInput, Prisma.AuctionLiveUncheckedUpdateWithoutModeratorInput>
}

export type AuctionLiveUpdateManyWithWhereWithoutModeratorInput = {
  where: Prisma.AuctionLiveScalarWhereInput
  data: Prisma.XOR<Prisma.AuctionLiveUpdateManyMutationInput, Prisma.AuctionLiveUncheckedUpdateManyWithoutModeratorInput>
}

export type AuctionLiveScalarWhereInput = {
  AND?: Prisma.AuctionLiveScalarWhereInput | Prisma.AuctionLiveScalarWhereInput[]
  OR?: Prisma.AuctionLiveScalarWhereInput[]
  NOT?: Prisma.AuctionLiveScalarWhereInput | Prisma.AuctionLiveScalarWhereInput[]
  id?: Prisma.StringFilter<"AuctionLive"> | string
  startTime?: Prisma.DateTimeFilter<"AuctionLive"> | Date | string
  title?: Prisma.StringFilter<"AuctionLive"> | string
  description?: Prisma.StringNullableFilter<"AuctionLive"> | string | null
  moderatorId?: Prisma.StringFilter<"AuctionLive"> | string
  createdAt?: Prisma.DateTimeFilter<"AuctionLive"> | Date | string
  endedAt?: Prisma.DateTimeNullableFilter<"AuctionLive"> | Date | string | null
}

export type AuctionLiveCreateWithoutListingsInput = {
  id?: string
  startTime: Date | string
  title: string
  description?: string | null
  createdAt?: Date | string
  endedAt?: Date | string | null
  moderator: Prisma.UserCreateNestedOneWithoutModeratedLiveAuctionsInput
}

export type AuctionLiveUncheckedCreateWithoutListingsInput = {
  id?: string
  startTime: Date | string
  title: string
  description?: string | null
  moderatorId: string
  createdAt?: Date | string
  endedAt?: Date | string | null
}

export type AuctionLiveCreateOrConnectWithoutListingsInput = {
  where: Prisma.AuctionLiveWhereUniqueInput
  create: Prisma.XOR<Prisma.AuctionLiveCreateWithoutListingsInput, Prisma.AuctionLiveUncheckedCreateWithoutListingsInput>
}

export type AuctionLiveUpsertWithoutListingsInput = {
  update: Prisma.XOR<Prisma.AuctionLiveUpdateWithoutListingsInput, Prisma.AuctionLiveUncheckedUpdateWithoutListingsInput>
  create: Prisma.XOR<Prisma.AuctionLiveCreateWithoutListingsInput, Prisma.AuctionLiveUncheckedCreateWithoutListingsInput>
  where?: Prisma.AuctionLiveWhereInput
}

export type AuctionLiveUpdateToOneWithWhereWithoutListingsInput = {
  where?: Prisma.AuctionLiveWhereInput
  data: Prisma.XOR<Prisma.AuctionLiveUpdateWithoutListingsInput, Prisma.AuctionLiveUncheckedUpdateWithoutListingsInput>
}

export type AuctionLiveUpdateWithoutListingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  moderator?: Prisma.UserUpdateOneRequiredWithoutModeratedLiveAuctionsNestedInput
}

export type AuctionLiveUncheckedUpdateWithoutListingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  moderatorId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type AuctionLiveCreateManyModeratorInput = {
  id?: string
  startTime: Date | string
  title: string
  description?: string | null
  createdAt?: Date | string
  endedAt?: Date | string | null
}

export type AuctionLiveUpdateWithoutModeratorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  listings?: Prisma.AuctionListingUpdateManyWithoutLiveAuctionNestedInput
}

export type AuctionLiveUncheckedUpdateWithoutModeratorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  listings?: Prisma.AuctionListingUncheckedUpdateManyWithoutLiveAuctionNestedInput
}

export type AuctionLiveUncheckedUpdateManyWithoutModeratorInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  startTime?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  endedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type AuctionLiveCountOutputType
 */

export type AuctionLiveCountOutputType = {
  listings: number
}

export type AuctionLiveCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  listings?: boolean | AuctionLiveCountOutputTypeCountListingsArgs
}

/**
 * AuctionLiveCountOutputType without action
 */
export type AuctionLiveCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLiveCountOutputType
   */
  select?: Prisma.AuctionLiveCountOutputTypeSelect<ExtArgs> | null
}

/**
 * AuctionLiveCountOutputType without action
 */
export type AuctionLiveCountOutputTypeCountListingsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AuctionListingWhereInput
}


export type AuctionLiveSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startTime?: boolean
  title?: boolean
  description?: boolean
  moderatorId?: boolean
  createdAt?: boolean
  endedAt?: boolean
  moderator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  listings?: boolean | Prisma.AuctionLive$listingsArgs<ExtArgs>
  _count?: boolean | Prisma.AuctionLiveCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["auctionLive"]>

export type AuctionLiveSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startTime?: boolean
  title?: boolean
  description?: boolean
  moderatorId?: boolean
  createdAt?: boolean
  endedAt?: boolean
  moderator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["auctionLive"]>

export type AuctionLiveSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  startTime?: boolean
  title?: boolean
  description?: boolean
  moderatorId?: boolean
  createdAt?: boolean
  endedAt?: boolean
  moderator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["auctionLive"]>

export type AuctionLiveSelectScalar = {
  id?: boolean
  startTime?: boolean
  title?: boolean
  description?: boolean
  moderatorId?: boolean
  createdAt?: boolean
  endedAt?: boolean
}

export type AuctionLiveOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "startTime" | "title" | "description" | "moderatorId" | "createdAt" | "endedAt", ExtArgs["result"]["auctionLive"]>
export type AuctionLiveInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  moderator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  listings?: boolean | Prisma.AuctionLive$listingsArgs<ExtArgs>
  _count?: boolean | Prisma.AuctionLiveCountOutputTypeDefaultArgs<ExtArgs>
}
export type AuctionLiveIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  moderator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type AuctionLiveIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  moderator?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $AuctionLivePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "AuctionLive"
  objects: {
    moderator: Prisma.$UserPayload<ExtArgs>
    listings: Prisma.$AuctionListingPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    startTime: Date
    title: string
    description: string | null
    moderatorId: string
    createdAt: Date
    endedAt: Date | null
  }, ExtArgs["result"]["auctionLive"]>
  composites: {}
}

export type AuctionLiveGetPayload<S extends boolean | null | undefined | AuctionLiveDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload, S>

export type AuctionLiveCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<AuctionLiveFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
    select?: AuctionLiveCountAggregateInputType | true
  }

export interface AuctionLiveDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuctionLive'], meta: { name: 'AuctionLive' } }
  /**
   * Find zero or one AuctionLive that matches the filter.
   * @param {AuctionLiveFindUniqueArgs} args - Arguments to find a AuctionLive
   * @example
   * // Get one AuctionLive
   * const auctionLive = await prisma.auctionLive.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AuctionLiveFindUniqueArgs>(args: Prisma.SelectSubset<T, AuctionLiveFindUniqueArgs<ExtArgs>>): Prisma.Prisma__AuctionLiveClient<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one AuctionLive that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AuctionLiveFindUniqueOrThrowArgs} args - Arguments to find a AuctionLive
   * @example
   * // Get one AuctionLive
   * const auctionLive = await prisma.auctionLive.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AuctionLiveFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, AuctionLiveFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__AuctionLiveClient<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first AuctionLive that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AuctionLiveFindFirstArgs} args - Arguments to find a AuctionLive
   * @example
   * // Get one AuctionLive
   * const auctionLive = await prisma.auctionLive.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AuctionLiveFindFirstArgs>(args?: Prisma.SelectSubset<T, AuctionLiveFindFirstArgs<ExtArgs>>): Prisma.Prisma__AuctionLiveClient<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first AuctionLive that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AuctionLiveFindFirstOrThrowArgs} args - Arguments to find a AuctionLive
   * @example
   * // Get one AuctionLive
   * const auctionLive = await prisma.auctionLive.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AuctionLiveFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, AuctionLiveFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__AuctionLiveClient<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more AuctionLives that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AuctionLiveFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all AuctionLives
   * const auctionLives = await prisma.auctionLive.findMany()
   * 
   * // Get first 10 AuctionLives
   * const auctionLives = await prisma.auctionLive.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const auctionLiveWithIdOnly = await prisma.auctionLive.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends AuctionLiveFindManyArgs>(args?: Prisma.SelectSubset<T, AuctionLiveFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a AuctionLive.
   * @param {AuctionLiveCreateArgs} args - Arguments to create a AuctionLive.
   * @example
   * // Create one AuctionLive
   * const AuctionLive = await prisma.auctionLive.create({
   *   data: {
   *     // ... data to create a AuctionLive
   *   }
   * })
   * 
   */
  create<T extends AuctionLiveCreateArgs>(args: Prisma.SelectSubset<T, AuctionLiveCreateArgs<ExtArgs>>): Prisma.Prisma__AuctionLiveClient<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many AuctionLives.
   * @param {AuctionLiveCreateManyArgs} args - Arguments to create many AuctionLives.
   * @example
   * // Create many AuctionLives
   * const auctionLive = await prisma.auctionLive.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends AuctionLiveCreateManyArgs>(args?: Prisma.SelectSubset<T, AuctionLiveCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many AuctionLives and returns the data saved in the database.
   * @param {AuctionLiveCreateManyAndReturnArgs} args - Arguments to create many AuctionLives.
   * @example
   * // Create many AuctionLives
   * const auctionLive = await prisma.auctionLive.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many AuctionLives and only return the `id`
   * const auctionLiveWithIdOnly = await prisma.auctionLive.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends AuctionLiveCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, AuctionLiveCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a AuctionLive.
   * @param {AuctionLiveDeleteArgs} args - Arguments to delete one AuctionLive.
   * @example
   * // Delete one AuctionLive
   * const AuctionLive = await prisma.auctionLive.delete({
   *   where: {
   *     // ... filter to delete one AuctionLive
   *   }
   * })
   * 
   */
  delete<T extends AuctionLiveDeleteArgs>(args: Prisma.SelectSubset<T, AuctionLiveDeleteArgs<ExtArgs>>): Prisma.Prisma__AuctionLiveClient<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one AuctionLive.
   * @param {AuctionLiveUpdateArgs} args - Arguments to update one AuctionLive.
   * @example
   * // Update one AuctionLive
   * const auctionLive = await prisma.auctionLive.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends AuctionLiveUpdateArgs>(args: Prisma.SelectSubset<T, AuctionLiveUpdateArgs<ExtArgs>>): Prisma.Prisma__AuctionLiveClient<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more AuctionLives.
   * @param {AuctionLiveDeleteManyArgs} args - Arguments to filter AuctionLives to delete.
   * @example
   * // Delete a few AuctionLives
   * const { count } = await prisma.auctionLive.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends AuctionLiveDeleteManyArgs>(args?: Prisma.SelectSubset<T, AuctionLiveDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more AuctionLives.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AuctionLiveUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many AuctionLives
   * const auctionLive = await prisma.auctionLive.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends AuctionLiveUpdateManyArgs>(args: Prisma.SelectSubset<T, AuctionLiveUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more AuctionLives and returns the data updated in the database.
   * @param {AuctionLiveUpdateManyAndReturnArgs} args - Arguments to update many AuctionLives.
   * @example
   * // Update many AuctionLives
   * const auctionLive = await prisma.auctionLive.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more AuctionLives and only return the `id`
   * const auctionLiveWithIdOnly = await prisma.auctionLive.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends AuctionLiveUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, AuctionLiveUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one AuctionLive.
   * @param {AuctionLiveUpsertArgs} args - Arguments to update or create a AuctionLive.
   * @example
   * // Update or create a AuctionLive
   * const auctionLive = await prisma.auctionLive.upsert({
   *   create: {
   *     // ... data to create a AuctionLive
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the AuctionLive we want to update
   *   }
   * })
   */
  upsert<T extends AuctionLiveUpsertArgs>(args: Prisma.SelectSubset<T, AuctionLiveUpsertArgs<ExtArgs>>): Prisma.Prisma__AuctionLiveClient<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of AuctionLives.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AuctionLiveCountArgs} args - Arguments to filter AuctionLives to count.
   * @example
   * // Count the number of AuctionLives
   * const count = await prisma.auctionLive.count({
   *   where: {
   *     // ... the filter for the AuctionLives we want to count
   *   }
   * })
  **/
  count<T extends AuctionLiveCountArgs>(
    args?: Prisma.Subset<T, AuctionLiveCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], AuctionLiveCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a AuctionLive.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AuctionLiveAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends AuctionLiveAggregateArgs>(args: Prisma.Subset<T, AuctionLiveAggregateArgs>): Prisma.PrismaPromise<GetAuctionLiveAggregateType<T>>

  /**
   * Group by AuctionLive.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AuctionLiveGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends AuctionLiveGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AuctionLiveGroupByArgs['orderBy'] }
      : { orderBy?: AuctionLiveGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, AuctionLiveGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuctionLiveGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the AuctionLive model
 */
readonly fields: AuctionLiveFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for AuctionLive.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AuctionLiveClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  moderator<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  listings<T extends Prisma.AuctionLive$listingsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.AuctionLive$listingsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AuctionListingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the AuctionLive model
 */
export interface AuctionLiveFieldRefs {
  readonly id: Prisma.FieldRef<"AuctionLive", 'String'>
  readonly startTime: Prisma.FieldRef<"AuctionLive", 'DateTime'>
  readonly title: Prisma.FieldRef<"AuctionLive", 'String'>
  readonly description: Prisma.FieldRef<"AuctionLive", 'String'>
  readonly moderatorId: Prisma.FieldRef<"AuctionLive", 'String'>
  readonly createdAt: Prisma.FieldRef<"AuctionLive", 'DateTime'>
  readonly endedAt: Prisma.FieldRef<"AuctionLive", 'DateTime'>
}
    

// Custom InputTypes
/**
 * AuctionLive findUnique
 */
export type AuctionLiveFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveInclude<ExtArgs> | null
  /**
   * Filter, which AuctionLive to fetch.
   */
  where: Prisma.AuctionLiveWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * AuctionLive findUniqueOrThrow
 */
export type AuctionLiveFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveInclude<ExtArgs> | null
  /**
   * Filter, which AuctionLive to fetch.
   */
  where: Prisma.AuctionLiveWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * AuctionLive findFirst
 */
export type AuctionLiveFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveInclude<ExtArgs> | null
  /**
   * Filter, which AuctionLive to fetch.
   */
  where?: Prisma.AuctionLiveWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AuctionLives to fetch.
   */
  orderBy?: Prisma.AuctionLiveOrderByWithRelationInput | Prisma.AuctionLiveOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for AuctionLives.
   */
  cursor?: Prisma.AuctionLiveWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AuctionLives from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AuctionLives.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of AuctionLives.
   */
  distinct?: Prisma.AuctionLiveScalarFieldEnum | Prisma.AuctionLiveScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * AuctionLive findFirstOrThrow
 */
export type AuctionLiveFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveInclude<ExtArgs> | null
  /**
   * Filter, which AuctionLive to fetch.
   */
  where?: Prisma.AuctionLiveWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AuctionLives to fetch.
   */
  orderBy?: Prisma.AuctionLiveOrderByWithRelationInput | Prisma.AuctionLiveOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for AuctionLives.
   */
  cursor?: Prisma.AuctionLiveWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AuctionLives from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AuctionLives.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of AuctionLives.
   */
  distinct?: Prisma.AuctionLiveScalarFieldEnum | Prisma.AuctionLiveScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * AuctionLive findMany
 */
export type AuctionLiveFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveInclude<ExtArgs> | null
  /**
   * Filter, which AuctionLives to fetch.
   */
  where?: Prisma.AuctionLiveWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of AuctionLives to fetch.
   */
  orderBy?: Prisma.AuctionLiveOrderByWithRelationInput | Prisma.AuctionLiveOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing AuctionLives.
   */
  cursor?: Prisma.AuctionLiveWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` AuctionLives from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` AuctionLives.
   */
  skip?: number
  distinct?: Prisma.AuctionLiveScalarFieldEnum | Prisma.AuctionLiveScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * AuctionLive create
 */
export type AuctionLiveCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveInclude<ExtArgs> | null
  /**
   * The data needed to create a AuctionLive.
   */
  data: Prisma.XOR<Prisma.AuctionLiveCreateInput, Prisma.AuctionLiveUncheckedCreateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * AuctionLive createMany
 */
export type AuctionLiveCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many AuctionLives.
   */
  data: Prisma.AuctionLiveCreateManyInput | Prisma.AuctionLiveCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * AuctionLive createManyAndReturn
 */
export type AuctionLiveCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * The data used to create many AuctionLives.
   */
  data: Prisma.AuctionLiveCreateManyInput | Prisma.AuctionLiveCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * AuctionLive update
 */
export type AuctionLiveUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveInclude<ExtArgs> | null
  /**
   * The data needed to update a AuctionLive.
   */
  data: Prisma.XOR<Prisma.AuctionLiveUpdateInput, Prisma.AuctionLiveUncheckedUpdateInput>
  /**
   * Choose, which AuctionLive to update.
   */
  where: Prisma.AuctionLiveWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * AuctionLive updateMany
 */
export type AuctionLiveUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update AuctionLives.
   */
  data: Prisma.XOR<Prisma.AuctionLiveUpdateManyMutationInput, Prisma.AuctionLiveUncheckedUpdateManyInput>
  /**
   * Filter which AuctionLives to update
   */
  where?: Prisma.AuctionLiveWhereInput
  /**
   * Limit how many AuctionLives to update.
   */
  limit?: number
}

/**
 * AuctionLive updateManyAndReturn
 */
export type AuctionLiveUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * The data used to update AuctionLives.
   */
  data: Prisma.XOR<Prisma.AuctionLiveUpdateManyMutationInput, Prisma.AuctionLiveUncheckedUpdateManyInput>
  /**
   * Filter which AuctionLives to update
   */
  where?: Prisma.AuctionLiveWhereInput
  /**
   * Limit how many AuctionLives to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * AuctionLive upsert
 */
export type AuctionLiveUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveInclude<ExtArgs> | null
  /**
   * The filter to search for the AuctionLive to update in case it exists.
   */
  where: Prisma.AuctionLiveWhereUniqueInput
  /**
   * In case the AuctionLive found by the `where` argument doesn't exist, create a new AuctionLive with this data.
   */
  create: Prisma.XOR<Prisma.AuctionLiveCreateInput, Prisma.AuctionLiveUncheckedCreateInput>
  /**
   * In case the AuctionLive was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AuctionLiveUpdateInput, Prisma.AuctionLiveUncheckedUpdateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * AuctionLive delete
 */
export type AuctionLiveDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveInclude<ExtArgs> | null
  /**
   * Filter which AuctionLive to delete.
   */
  where: Prisma.AuctionLiveWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * AuctionLive deleteMany
 */
export type AuctionLiveDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which AuctionLives to delete
   */
  where?: Prisma.AuctionLiveWhereInput
  /**
   * Limit how many AuctionLives to delete.
   */
  limit?: number
}

/**
 * AuctionLive.listings
 */
export type AuctionLive$listingsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionListing
   */
  select?: Prisma.AuctionListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionListing
   */
  omit?: Prisma.AuctionListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionListingInclude<ExtArgs> | null
  where?: Prisma.AuctionListingWhereInput
  orderBy?: Prisma.AuctionListingOrderByWithRelationInput | Prisma.AuctionListingOrderByWithRelationInput[]
  cursor?: Prisma.AuctionListingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AuctionListingScalarFieldEnum | Prisma.AuctionListingScalarFieldEnum[]
}

/**
 * AuctionLive without action
 */
export type AuctionLiveDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveInclude<ExtArgs> | null
}
