
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model User
 * 
 */
export type UserModel = runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

export type UserMinAggregateOutputType = {
  id: string | null
  combineId: string | null
  username: string | null
  discordId: string | null
  discordUsername: string | null
  role: $Enums.Role | null
  apiKey: string | null
  banned: boolean | null
  bannedReason: string | null
  bannedDate: Date | null
  createdAt: Date | null
  lastLogin: Date | null
}

export type UserMaxAggregateOutputType = {
  id: string | null
  combineId: string | null
  username: string | null
  discordId: string | null
  discordUsername: string | null
  role: $Enums.Role | null
  apiKey: string | null
  banned: boolean | null
  bannedReason: string | null
  bannedDate: Date | null
  createdAt: Date | null
  lastLogin: Date | null
}

export type UserCountAggregateOutputType = {
  id: number
  combineId: number
  username: number
  combineScopes: number
  discordId: number
  discordUsername: number
  role: number
  apiKey: number
  banned: number
  bannedReason: number
  bannedDate: number
  createdAt: number
  lastLogin: number
  _all: number
}


export type UserMinAggregateInputType = {
  id?: true
  combineId?: true
  username?: true
  discordId?: true
  discordUsername?: true
  role?: true
  apiKey?: true
  banned?: true
  bannedReason?: true
  bannedDate?: true
  createdAt?: true
  lastLogin?: true
}

export type UserMaxAggregateInputType = {
  id?: true
  combineId?: true
  username?: true
  discordId?: true
  discordUsername?: true
  role?: true
  apiKey?: true
  banned?: true
  bannedReason?: true
  bannedDate?: true
  createdAt?: true
  lastLogin?: true
}

export type UserCountAggregateInputType = {
  id?: true
  combineId?: true
  username?: true
  combineScopes?: true
  discordId?: true
  discordUsername?: true
  role?: true
  apiKey?: true
  banned?: true
  bannedReason?: true
  bannedDate?: true
  createdAt?: true
  lastLogin?: true
  _all?: true
}

export type UserAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Users
  **/
  _count?: true | UserCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UserMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UserMaxAggregateInputType
}

export type GetUserAggregateType<T extends UserAggregateArgs> = {
      [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>
}




export type UserGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithAggregationInput | Prisma.UserOrderByWithAggregationInput[]
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum
  having?: Prisma.UserScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserCountAggregateInputType | true
  _min?: UserMinAggregateInputType
  _max?: UserMaxAggregateInputType
}

export type UserGroupByOutputType = {
  id: string
  combineId: string
  username: string
  combineScopes: string[]
  discordId: string | null
  discordUsername: string | null
  role: $Enums.Role
  apiKey: string
  banned: boolean
  bannedReason: string | null
  bannedDate: Date | null
  createdAt: Date
  lastLogin: Date
  _count: UserCountAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
      }
    >
  > 



export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  id?: Prisma.StringFilter<"User"> | string
  combineId?: Prisma.StringFilter<"User"> | string
  username?: Prisma.StringFilter<"User"> | string
  combineScopes?: Prisma.StringNullableListFilter<"User">
  discordId?: Prisma.StringNullableFilter<"User"> | string | null
  discordUsername?: Prisma.StringNullableFilter<"User"> | string | null
  role?: Prisma.EnumRoleFilter<"User"> | $Enums.Role
  apiKey?: Prisma.StringFilter<"User"> | string
  banned?: Prisma.BoolFilter<"User"> | boolean
  bannedReason?: Prisma.StringNullableFilter<"User"> | string | null
  bannedDate?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  lastLogin?: Prisma.DateTimeFilter<"User"> | Date | string
  profile?: Prisma.XOR<Prisma.ProfileNullableScalarRelationFilter, Prisma.ProfileWhereInput> | null
  ownedOrganizations?: Prisma.OrganizationListRelationFilter
  moderatedLiveAuctions?: Prisma.AuctionLiveListRelationFilter
  auctionListingsCreated?: Prisma.AuctionListingListRelationFilter
  auctionListingsWon?: Prisma.AuctionListingListRelationFilter
  auctionBids?: Prisma.AuctionBidListRelationFilter
}

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  combineId?: Prisma.SortOrder
  username?: Prisma.SortOrder
  combineScopes?: Prisma.SortOrder
  discordId?: Prisma.SortOrderInput | Prisma.SortOrder
  discordUsername?: Prisma.SortOrderInput | Prisma.SortOrder
  role?: Prisma.SortOrder
  apiKey?: Prisma.SortOrder
  banned?: Prisma.SortOrder
  bannedReason?: Prisma.SortOrderInput | Prisma.SortOrder
  bannedDate?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  lastLogin?: Prisma.SortOrder
  profile?: Prisma.ProfileOrderByWithRelationInput
  ownedOrganizations?: Prisma.OrganizationOrderByRelationAggregateInput
  moderatedLiveAuctions?: Prisma.AuctionLiveOrderByRelationAggregateInput
  auctionListingsCreated?: Prisma.AuctionListingOrderByRelationAggregateInput
  auctionListingsWon?: Prisma.AuctionListingOrderByRelationAggregateInput
  auctionBids?: Prisma.AuctionBidOrderByRelationAggregateInput
}

export type UserWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  combineId?: string
  discordId?: string
  apiKey?: string
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  username?: Prisma.StringFilter<"User"> | string
  combineScopes?: Prisma.StringNullableListFilter<"User">
  discordUsername?: Prisma.StringNullableFilter<"User"> | string | null
  role?: Prisma.EnumRoleFilter<"User"> | $Enums.Role
  banned?: Prisma.BoolFilter<"User"> | boolean
  bannedReason?: Prisma.StringNullableFilter<"User"> | string | null
  bannedDate?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  lastLogin?: Prisma.DateTimeFilter<"User"> | Date | string
  profile?: Prisma.XOR<Prisma.ProfileNullableScalarRelationFilter, Prisma.ProfileWhereInput> | null
  ownedOrganizations?: Prisma.OrganizationListRelationFilter
  moderatedLiveAuctions?: Prisma.AuctionLiveListRelationFilter
  auctionListingsCreated?: Prisma.AuctionListingListRelationFilter
  auctionListingsWon?: Prisma.AuctionListingListRelationFilter
  auctionBids?: Prisma.AuctionBidListRelationFilter
}, "id" | "combineId" | "discordId" | "apiKey">

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  combineId?: Prisma.SortOrder
  username?: Prisma.SortOrder
  combineScopes?: Prisma.SortOrder
  discordId?: Prisma.SortOrderInput | Prisma.SortOrder
  discordUsername?: Prisma.SortOrderInput | Prisma.SortOrder
  role?: Prisma.SortOrder
  apiKey?: Prisma.SortOrder
  banned?: Prisma.SortOrder
  bannedReason?: Prisma.SortOrderInput | Prisma.SortOrder
  bannedDate?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  lastLogin?: Prisma.SortOrder
  _count?: Prisma.UserCountOrderByAggregateInput
  _max?: Prisma.UserMaxOrderByAggregateInput
  _min?: Prisma.UserMinOrderByAggregateInput
}

export type UserScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"User"> | string
  combineId?: Prisma.StringWithAggregatesFilter<"User"> | string
  username?: Prisma.StringWithAggregatesFilter<"User"> | string
  combineScopes?: Prisma.StringNullableListFilter<"User">
  discordId?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  discordUsername?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  role?: Prisma.EnumRoleWithAggregatesFilter<"User"> | $Enums.Role
  apiKey?: Prisma.StringWithAggregatesFilter<"User"> | string
  banned?: Prisma.BoolWithAggregatesFilter<"User"> | boolean
  bannedReason?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  bannedDate?: Prisma.DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
  lastLogin?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
}

export type UserCreateInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  ownedOrganizations?: Prisma.OrganizationCreateNestedManyWithoutOwnerInput
  moderatedLiveAuctions?: Prisma.AuctionLiveCreateNestedManyWithoutModeratorInput
  auctionListingsCreated?: Prisma.AuctionListingCreateNestedManyWithoutCreatorInput
  auctionListingsWon?: Prisma.AuctionListingCreateNestedManyWithoutWinnerInput
  auctionBids?: Prisma.AuctionBidCreateNestedManyWithoutBidderInput
}

export type UserUncheckedCreateInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  ownedOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutOwnerInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedCreateNestedManyWithoutModeratorInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutCreatorInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutWinnerInput
  auctionBids?: Prisma.AuctionBidUncheckedCreateNestedManyWithoutBidderInput
}

export type UserUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  ownedOrganizations?: Prisma.OrganizationUpdateManyWithoutOwnerNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUpdateManyWithoutModeratorNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUpdateManyWithoutCreatorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUpdateManyWithoutWinnerNestedInput
  auctionBids?: Prisma.AuctionBidUpdateManyWithoutBidderNestedInput
}

export type UserUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  ownedOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutOwnerNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedUpdateManyWithoutModeratorNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedUpdateManyWithoutCreatorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedUpdateManyWithoutWinnerNestedInput
  auctionBids?: Prisma.AuctionBidUncheckedUpdateManyWithoutBidderNestedInput
}

export type UserCreateManyInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
}

export type UserUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput
  isNot?: Prisma.UserWhereInput
}

export type UserNullableScalarRelationFilter = {
  is?: Prisma.UserWhereInput | null
  isNot?: Prisma.UserWhereInput | null
}

export type StringNullableListFilter<$PrismaModel = never> = {
  equals?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null
  has?: string | Prisma.StringFieldRefInput<$PrismaModel> | null
  hasEvery?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  hasSome?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  combineId?: Prisma.SortOrder
  username?: Prisma.SortOrder
  combineScopes?: Prisma.SortOrder
  discordId?: Prisma.SortOrder
  discordUsername?: Prisma.SortOrder
  role?: Prisma.SortOrder
  apiKey?: Prisma.SortOrder
  banned?: Prisma.SortOrder
  bannedReason?: Prisma.SortOrder
  bannedDate?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  lastLogin?: Prisma.SortOrder
}

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  combineId?: Prisma.SortOrder
  username?: Prisma.SortOrder
  discordId?: Prisma.SortOrder
  discordUsername?: Prisma.SortOrder
  role?: Prisma.SortOrder
  apiKey?: Prisma.SortOrder
  banned?: Prisma.SortOrder
  bannedReason?: Prisma.SortOrder
  bannedDate?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  lastLogin?: Prisma.SortOrder
}

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  combineId?: Prisma.SortOrder
  username?: Prisma.SortOrder
  discordId?: Prisma.SortOrder
  discordUsername?: Prisma.SortOrder
  role?: Prisma.SortOrder
  apiKey?: Prisma.SortOrder
  banned?: Prisma.SortOrder
  bannedReason?: Prisma.SortOrder
  bannedDate?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  lastLogin?: Prisma.SortOrder
}

export type UserCreateNestedOneWithoutModeratedLiveAuctionsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutModeratedLiveAuctionsInput, Prisma.UserUncheckedCreateWithoutModeratedLiveAuctionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutModeratedLiveAuctionsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutModeratedLiveAuctionsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutModeratedLiveAuctionsInput, Prisma.UserUncheckedCreateWithoutModeratedLiveAuctionsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutModeratedLiveAuctionsInput
  upsert?: Prisma.UserUpsertWithoutModeratedLiveAuctionsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutModeratedLiveAuctionsInput, Prisma.UserUpdateWithoutModeratedLiveAuctionsInput>, Prisma.UserUncheckedUpdateWithoutModeratedLiveAuctionsInput>
}

export type UserCreateNestedOneWithoutAuctionListingsCreatedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAuctionListingsCreatedInput, Prisma.UserUncheckedCreateWithoutAuctionListingsCreatedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAuctionListingsCreatedInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutAuctionListingsWonInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAuctionListingsWonInput, Prisma.UserUncheckedCreateWithoutAuctionListingsWonInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAuctionListingsWonInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutAuctionListingsCreatedNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAuctionListingsCreatedInput, Prisma.UserUncheckedCreateWithoutAuctionListingsCreatedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAuctionListingsCreatedInput
  upsert?: Prisma.UserUpsertWithoutAuctionListingsCreatedInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutAuctionListingsCreatedInput, Prisma.UserUpdateWithoutAuctionListingsCreatedInput>, Prisma.UserUncheckedUpdateWithoutAuctionListingsCreatedInput>
}

export type UserUpdateOneWithoutAuctionListingsWonNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAuctionListingsWonInput, Prisma.UserUncheckedCreateWithoutAuctionListingsWonInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAuctionListingsWonInput
  upsert?: Prisma.UserUpsertWithoutAuctionListingsWonInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutAuctionListingsWonInput, Prisma.UserUpdateWithoutAuctionListingsWonInput>, Prisma.UserUncheckedUpdateWithoutAuctionListingsWonInput>
}

export type UserCreateNestedOneWithoutAuctionBidsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAuctionBidsInput, Prisma.UserUncheckedCreateWithoutAuctionBidsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAuctionBidsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutAuctionBidsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutAuctionBidsInput, Prisma.UserUncheckedCreateWithoutAuctionBidsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAuctionBidsInput
  upsert?: Prisma.UserUpsertWithoutAuctionBidsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutAuctionBidsInput, Prisma.UserUpdateWithoutAuctionBidsInput>, Prisma.UserUncheckedUpdateWithoutAuctionBidsInput>
}

export type UserCreateNestedOneWithoutOwnedOrganizationsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutOwnedOrganizationsInput, Prisma.UserUncheckedCreateWithoutOwnedOrganizationsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutOwnedOrganizationsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutOwnedOrganizationsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutOwnedOrganizationsInput, Prisma.UserUncheckedCreateWithoutOwnedOrganizationsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutOwnedOrganizationsInput
  upsert?: Prisma.UserUpsertWithoutOwnedOrganizationsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutOwnedOrganizationsInput, Prisma.UserUpdateWithoutOwnedOrganizationsInput>, Prisma.UserUncheckedUpdateWithoutOwnedOrganizationsInput>
}

export type UserCreatecombineScopesInput = {
  set: string[]
}

export type UserUpdatecombineScopesInput = {
  set?: string[]
  push?: string | string[]
}

export type EnumRoleFieldUpdateOperationsInput = {
  set?: $Enums.Role
}

export type UserCreateNestedOneWithoutProfileInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutProfileInput, Prisma.UserUncheckedCreateWithoutProfileInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProfileInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutProfileNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutProfileInput, Prisma.UserUncheckedCreateWithoutProfileInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProfileInput
  upsert?: Prisma.UserUpsertWithoutProfileInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutProfileInput, Prisma.UserUpdateWithoutProfileInput>, Prisma.UserUncheckedUpdateWithoutProfileInput>
}

export type UserCreateWithoutModeratedLiveAuctionsInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  ownedOrganizations?: Prisma.OrganizationCreateNestedManyWithoutOwnerInput
  auctionListingsCreated?: Prisma.AuctionListingCreateNestedManyWithoutCreatorInput
  auctionListingsWon?: Prisma.AuctionListingCreateNestedManyWithoutWinnerInput
  auctionBids?: Prisma.AuctionBidCreateNestedManyWithoutBidderInput
}

export type UserUncheckedCreateWithoutModeratedLiveAuctionsInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  ownedOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutOwnerInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutCreatorInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutWinnerInput
  auctionBids?: Prisma.AuctionBidUncheckedCreateNestedManyWithoutBidderInput
}

export type UserCreateOrConnectWithoutModeratedLiveAuctionsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutModeratedLiveAuctionsInput, Prisma.UserUncheckedCreateWithoutModeratedLiveAuctionsInput>
}

export type UserUpsertWithoutModeratedLiveAuctionsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutModeratedLiveAuctionsInput, Prisma.UserUncheckedUpdateWithoutModeratedLiveAuctionsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutModeratedLiveAuctionsInput, Prisma.UserUncheckedCreateWithoutModeratedLiveAuctionsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutModeratedLiveAuctionsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutModeratedLiveAuctionsInput, Prisma.UserUncheckedUpdateWithoutModeratedLiveAuctionsInput>
}

export type UserUpdateWithoutModeratedLiveAuctionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  ownedOrganizations?: Prisma.OrganizationUpdateManyWithoutOwnerNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUpdateManyWithoutCreatorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUpdateManyWithoutWinnerNestedInput
  auctionBids?: Prisma.AuctionBidUpdateManyWithoutBidderNestedInput
}

export type UserUncheckedUpdateWithoutModeratedLiveAuctionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  ownedOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutOwnerNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedUpdateManyWithoutCreatorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedUpdateManyWithoutWinnerNestedInput
  auctionBids?: Prisma.AuctionBidUncheckedUpdateManyWithoutBidderNestedInput
}

export type UserCreateWithoutAuctionListingsCreatedInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  ownedOrganizations?: Prisma.OrganizationCreateNestedManyWithoutOwnerInput
  moderatedLiveAuctions?: Prisma.AuctionLiveCreateNestedManyWithoutModeratorInput
  auctionListingsWon?: Prisma.AuctionListingCreateNestedManyWithoutWinnerInput
  auctionBids?: Prisma.AuctionBidCreateNestedManyWithoutBidderInput
}

export type UserUncheckedCreateWithoutAuctionListingsCreatedInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  ownedOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutOwnerInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedCreateNestedManyWithoutModeratorInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutWinnerInput
  auctionBids?: Prisma.AuctionBidUncheckedCreateNestedManyWithoutBidderInput
}

export type UserCreateOrConnectWithoutAuctionListingsCreatedInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutAuctionListingsCreatedInput, Prisma.UserUncheckedCreateWithoutAuctionListingsCreatedInput>
}

export type UserCreateWithoutAuctionListingsWonInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  ownedOrganizations?: Prisma.OrganizationCreateNestedManyWithoutOwnerInput
  moderatedLiveAuctions?: Prisma.AuctionLiveCreateNestedManyWithoutModeratorInput
  auctionListingsCreated?: Prisma.AuctionListingCreateNestedManyWithoutCreatorInput
  auctionBids?: Prisma.AuctionBidCreateNestedManyWithoutBidderInput
}

export type UserUncheckedCreateWithoutAuctionListingsWonInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  ownedOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutOwnerInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedCreateNestedManyWithoutModeratorInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutCreatorInput
  auctionBids?: Prisma.AuctionBidUncheckedCreateNestedManyWithoutBidderInput
}

export type UserCreateOrConnectWithoutAuctionListingsWonInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutAuctionListingsWonInput, Prisma.UserUncheckedCreateWithoutAuctionListingsWonInput>
}

export type UserUpsertWithoutAuctionListingsCreatedInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutAuctionListingsCreatedInput, Prisma.UserUncheckedUpdateWithoutAuctionListingsCreatedInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutAuctionListingsCreatedInput, Prisma.UserUncheckedCreateWithoutAuctionListingsCreatedInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutAuctionListingsCreatedInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutAuctionListingsCreatedInput, Prisma.UserUncheckedUpdateWithoutAuctionListingsCreatedInput>
}

export type UserUpdateWithoutAuctionListingsCreatedInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  ownedOrganizations?: Prisma.OrganizationUpdateManyWithoutOwnerNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUpdateManyWithoutModeratorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUpdateManyWithoutWinnerNestedInput
  auctionBids?: Prisma.AuctionBidUpdateManyWithoutBidderNestedInput
}

export type UserUncheckedUpdateWithoutAuctionListingsCreatedInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  ownedOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutOwnerNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedUpdateManyWithoutModeratorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedUpdateManyWithoutWinnerNestedInput
  auctionBids?: Prisma.AuctionBidUncheckedUpdateManyWithoutBidderNestedInput
}

export type UserUpsertWithoutAuctionListingsWonInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutAuctionListingsWonInput, Prisma.UserUncheckedUpdateWithoutAuctionListingsWonInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutAuctionListingsWonInput, Prisma.UserUncheckedCreateWithoutAuctionListingsWonInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutAuctionListingsWonInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutAuctionListingsWonInput, Prisma.UserUncheckedUpdateWithoutAuctionListingsWonInput>
}

export type UserUpdateWithoutAuctionListingsWonInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  ownedOrganizations?: Prisma.OrganizationUpdateManyWithoutOwnerNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUpdateManyWithoutModeratorNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUpdateManyWithoutCreatorNestedInput
  auctionBids?: Prisma.AuctionBidUpdateManyWithoutBidderNestedInput
}

export type UserUncheckedUpdateWithoutAuctionListingsWonInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  ownedOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutOwnerNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedUpdateManyWithoutModeratorNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedUpdateManyWithoutCreatorNestedInput
  auctionBids?: Prisma.AuctionBidUncheckedUpdateManyWithoutBidderNestedInput
}

export type UserCreateWithoutAuctionBidsInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  ownedOrganizations?: Prisma.OrganizationCreateNestedManyWithoutOwnerInput
  moderatedLiveAuctions?: Prisma.AuctionLiveCreateNestedManyWithoutModeratorInput
  auctionListingsCreated?: Prisma.AuctionListingCreateNestedManyWithoutCreatorInput
  auctionListingsWon?: Prisma.AuctionListingCreateNestedManyWithoutWinnerInput
}

export type UserUncheckedCreateWithoutAuctionBidsInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  ownedOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutOwnerInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedCreateNestedManyWithoutModeratorInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutCreatorInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutWinnerInput
}

export type UserCreateOrConnectWithoutAuctionBidsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutAuctionBidsInput, Prisma.UserUncheckedCreateWithoutAuctionBidsInput>
}

export type UserUpsertWithoutAuctionBidsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutAuctionBidsInput, Prisma.UserUncheckedUpdateWithoutAuctionBidsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutAuctionBidsInput, Prisma.UserUncheckedCreateWithoutAuctionBidsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutAuctionBidsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutAuctionBidsInput, Prisma.UserUncheckedUpdateWithoutAuctionBidsInput>
}

export type UserUpdateWithoutAuctionBidsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  ownedOrganizations?: Prisma.OrganizationUpdateManyWithoutOwnerNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUpdateManyWithoutModeratorNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUpdateManyWithoutCreatorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUpdateManyWithoutWinnerNestedInput
}

export type UserUncheckedUpdateWithoutAuctionBidsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  ownedOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutOwnerNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedUpdateManyWithoutModeratorNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedUpdateManyWithoutCreatorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedUpdateManyWithoutWinnerNestedInput
}

export type UserCreateWithoutOwnedOrganizationsInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileCreateNestedOneWithoutUserInput
  moderatedLiveAuctions?: Prisma.AuctionLiveCreateNestedManyWithoutModeratorInput
  auctionListingsCreated?: Prisma.AuctionListingCreateNestedManyWithoutCreatorInput
  auctionListingsWon?: Prisma.AuctionListingCreateNestedManyWithoutWinnerInput
  auctionBids?: Prisma.AuctionBidCreateNestedManyWithoutBidderInput
}

export type UserUncheckedCreateWithoutOwnedOrganizationsInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  profile?: Prisma.ProfileUncheckedCreateNestedOneWithoutUserInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedCreateNestedManyWithoutModeratorInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutCreatorInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutWinnerInput
  auctionBids?: Prisma.AuctionBidUncheckedCreateNestedManyWithoutBidderInput
}

export type UserCreateOrConnectWithoutOwnedOrganizationsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutOwnedOrganizationsInput, Prisma.UserUncheckedCreateWithoutOwnedOrganizationsInput>
}

export type UserUpsertWithoutOwnedOrganizationsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutOwnedOrganizationsInput, Prisma.UserUncheckedUpdateWithoutOwnedOrganizationsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutOwnedOrganizationsInput, Prisma.UserUncheckedCreateWithoutOwnedOrganizationsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutOwnedOrganizationsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutOwnedOrganizationsInput, Prisma.UserUncheckedUpdateWithoutOwnedOrganizationsInput>
}

export type UserUpdateWithoutOwnedOrganizationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUpdateOneWithoutUserNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUpdateManyWithoutModeratorNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUpdateManyWithoutCreatorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUpdateManyWithoutWinnerNestedInput
  auctionBids?: Prisma.AuctionBidUpdateManyWithoutBidderNestedInput
}

export type UserUncheckedUpdateWithoutOwnedOrganizationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  profile?: Prisma.ProfileUncheckedUpdateOneWithoutUserNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedUpdateManyWithoutModeratorNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedUpdateManyWithoutCreatorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedUpdateManyWithoutWinnerNestedInput
  auctionBids?: Prisma.AuctionBidUncheckedUpdateManyWithoutBidderNestedInput
}

export type UserCreateWithoutProfileInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  ownedOrganizations?: Prisma.OrganizationCreateNestedManyWithoutOwnerInput
  moderatedLiveAuctions?: Prisma.AuctionLiveCreateNestedManyWithoutModeratorInput
  auctionListingsCreated?: Prisma.AuctionListingCreateNestedManyWithoutCreatorInput
  auctionListingsWon?: Prisma.AuctionListingCreateNestedManyWithoutWinnerInput
  auctionBids?: Prisma.AuctionBidCreateNestedManyWithoutBidderInput
}

export type UserUncheckedCreateWithoutProfileInput = {
  id?: string
  combineId: string
  username: string
  combineScopes?: Prisma.UserCreatecombineScopesInput | string[]
  discordId?: string | null
  discordUsername?: string | null
  role?: $Enums.Role
  apiKey?: string
  banned?: boolean
  bannedReason?: string | null
  bannedDate?: Date | string | null
  createdAt?: Date | string
  lastLogin?: Date | string
  ownedOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutOwnerInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedCreateNestedManyWithoutModeratorInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutCreatorInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedCreateNestedManyWithoutWinnerInput
  auctionBids?: Prisma.AuctionBidUncheckedCreateNestedManyWithoutBidderInput
}

export type UserCreateOrConnectWithoutProfileInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutProfileInput, Prisma.UserUncheckedCreateWithoutProfileInput>
}

export type UserUpsertWithoutProfileInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutProfileInput, Prisma.UserUncheckedUpdateWithoutProfileInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutProfileInput, Prisma.UserUncheckedCreateWithoutProfileInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutProfileInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutProfileInput, Prisma.UserUncheckedUpdateWithoutProfileInput>
}

export type UserUpdateWithoutProfileInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownedOrganizations?: Prisma.OrganizationUpdateManyWithoutOwnerNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUpdateManyWithoutModeratorNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUpdateManyWithoutCreatorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUpdateManyWithoutWinnerNestedInput
  auctionBids?: Prisma.AuctionBidUpdateManyWithoutBidderNestedInput
}

export type UserUncheckedUpdateWithoutProfileInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  combineId?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  combineScopes?: Prisma.UserUpdatecombineScopesInput | string[]
  discordId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  discordUsername?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  role?: Prisma.EnumRoleFieldUpdateOperationsInput | $Enums.Role
  apiKey?: Prisma.StringFieldUpdateOperationsInput | string
  banned?: Prisma.BoolFieldUpdateOperationsInput | boolean
  bannedReason?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  bannedDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lastLogin?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ownedOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutOwnerNestedInput
  moderatedLiveAuctions?: Prisma.AuctionLiveUncheckedUpdateManyWithoutModeratorNestedInput
  auctionListingsCreated?: Prisma.AuctionListingUncheckedUpdateManyWithoutCreatorNestedInput
  auctionListingsWon?: Prisma.AuctionListingUncheckedUpdateManyWithoutWinnerNestedInput
  auctionBids?: Prisma.AuctionBidUncheckedUpdateManyWithoutBidderNestedInput
}


/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  ownedOrganizations: number
  moderatedLiveAuctions: number
  auctionListingsCreated: number
  auctionListingsWon: number
  auctionBids: number
}

export type UserCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ownedOrganizations?: boolean | UserCountOutputTypeCountOwnedOrganizationsArgs
  moderatedLiveAuctions?: boolean | UserCountOutputTypeCountModeratedLiveAuctionsArgs
  auctionListingsCreated?: boolean | UserCountOutputTypeCountAuctionListingsCreatedArgs
  auctionListingsWon?: boolean | UserCountOutputTypeCountAuctionListingsWonArgs
  auctionBids?: boolean | UserCountOutputTypeCountAuctionBidsArgs
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountOwnedOrganizationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OrganizationWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountModeratedLiveAuctionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AuctionLiveWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAuctionListingsCreatedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AuctionListingWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAuctionListingsWonArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AuctionListingWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAuctionBidsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AuctionBidWhereInput
}


export type UserSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  combineId?: boolean
  username?: boolean
  combineScopes?: boolean
  discordId?: boolean
  discordUsername?: boolean
  role?: boolean
  apiKey?: boolean
  banned?: boolean
  bannedReason?: boolean
  bannedDate?: boolean
  createdAt?: boolean
  lastLogin?: boolean
  profile?: boolean | Prisma.User$profileArgs<ExtArgs>
  ownedOrganizations?: boolean | Prisma.User$ownedOrganizationsArgs<ExtArgs>
  moderatedLiveAuctions?: boolean | Prisma.User$moderatedLiveAuctionsArgs<ExtArgs>
  auctionListingsCreated?: boolean | Prisma.User$auctionListingsCreatedArgs<ExtArgs>
  auctionListingsWon?: boolean | Prisma.User$auctionListingsWonArgs<ExtArgs>
  auctionBids?: boolean | Prisma.User$auctionBidsArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user"]>

export type UserSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  combineId?: boolean
  username?: boolean
  combineScopes?: boolean
  discordId?: boolean
  discordUsername?: boolean
  role?: boolean
  apiKey?: boolean
  banned?: boolean
  bannedReason?: boolean
  bannedDate?: boolean
  createdAt?: boolean
  lastLogin?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  combineId?: boolean
  username?: boolean
  combineScopes?: boolean
  discordId?: boolean
  discordUsername?: boolean
  role?: boolean
  apiKey?: boolean
  banned?: boolean
  bannedReason?: boolean
  bannedDate?: boolean
  createdAt?: boolean
  lastLogin?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectScalar = {
  id?: boolean
  combineId?: boolean
  username?: boolean
  combineScopes?: boolean
  discordId?: boolean
  discordUsername?: boolean
  role?: boolean
  apiKey?: boolean
  banned?: boolean
  bannedReason?: boolean
  bannedDate?: boolean
  createdAt?: boolean
  lastLogin?: boolean
}

export type UserOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "combineId" | "username" | "combineScopes" | "discordId" | "discordUsername" | "role" | "apiKey" | "banned" | "bannedReason" | "bannedDate" | "createdAt" | "lastLogin", ExtArgs["result"]["user"]>
export type UserInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  profile?: boolean | Prisma.User$profileArgs<ExtArgs>
  ownedOrganizations?: boolean | Prisma.User$ownedOrganizationsArgs<ExtArgs>
  moderatedLiveAuctions?: boolean | Prisma.User$moderatedLiveAuctionsArgs<ExtArgs>
  auctionListingsCreated?: boolean | Prisma.User$auctionListingsCreatedArgs<ExtArgs>
  auctionListingsWon?: boolean | Prisma.User$auctionListingsWonArgs<ExtArgs>
  auctionBids?: boolean | Prisma.User$auctionBidsArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}
export type UserIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type UserIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $UserPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "User"
  objects: {
    profile: Prisma.$ProfilePayload<ExtArgs> | null
    ownedOrganizations: Prisma.$OrganizationPayload<ExtArgs>[]
    moderatedLiveAuctions: Prisma.$AuctionLivePayload<ExtArgs>[]
    auctionListingsCreated: Prisma.$AuctionListingPayload<ExtArgs>[]
    auctionListingsWon: Prisma.$AuctionListingPayload<ExtArgs>[]
    auctionBids: Prisma.$AuctionBidPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    combineId: string
    username: string
    combineScopes: string[]
    discordId: string | null
    discordUsername: string | null
    role: $Enums.Role
    apiKey: string
    banned: boolean
    bannedReason: string | null
    bannedDate: Date | null
    createdAt: Date
    lastLogin: Date
  }, ExtArgs["result"]["user"]>
  composites: {}
}

export type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UserPayload, S>

export type UserCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit' | 'relationLoadStrategy'> & {
    select?: UserCountAggregateInputType | true
  }

export interface UserDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   * 
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends UserFindManyArgs>(args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   * 
   */
  create<T extends UserCreateArgs>(args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UserCreateManyArgs>(args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Users and returns the data saved in the database.
   * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Users and only return the `id`
   * const userWithIdOnly = await prisma.user.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   * 
   */
  delete<T extends UserDeleteArgs>(args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UserUpdateArgs>(args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UserDeleteManyArgs>(args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UserUpdateManyArgs>(args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users and returns the data updated in the database.
   * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Users and only return the `id`
   * const userWithIdOnly = await prisma.user.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
  **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UserAggregateArgs>(args: Prisma.Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs['orderBy'] }
      : { orderBy?: UserGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the User model
 */
readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  profile<T extends Prisma.User$profileArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$profileArgs<ExtArgs>>): Prisma.Prisma__ProfileClient<runtime.Types.Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  ownedOrganizations<T extends Prisma.User$ownedOrganizationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$ownedOrganizationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  moderatedLiveAuctions<T extends Prisma.User$moderatedLiveAuctionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$moderatedLiveAuctionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AuctionLivePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  auctionListingsCreated<T extends Prisma.User$auctionListingsCreatedArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$auctionListingsCreatedArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AuctionListingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  auctionListingsWon<T extends Prisma.User$auctionListingsWonArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$auctionListingsWonArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AuctionListingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  auctionBids<T extends Prisma.User$auctionBidsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$auctionBidsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AuctionBidPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<"User", 'String'>
  readonly combineId: Prisma.FieldRef<"User", 'String'>
  readonly username: Prisma.FieldRef<"User", 'String'>
  readonly combineScopes: Prisma.FieldRef<"User", 'String[]'>
  readonly discordId: Prisma.FieldRef<"User", 'String'>
  readonly discordUsername: Prisma.FieldRef<"User", 'String'>
  readonly role: Prisma.FieldRef<"User", 'Role'>
  readonly apiKey: Prisma.FieldRef<"User", 'String'>
  readonly banned: Prisma.FieldRef<"User", 'Boolean'>
  readonly bannedReason: Prisma.FieldRef<"User", 'String'>
  readonly bannedDate: Prisma.FieldRef<"User", 'DateTime'>
  readonly createdAt: Prisma.FieldRef<"User", 'DateTime'>
  readonly lastLogin: Prisma.FieldRef<"User", 'DateTime'>
}
    

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User findFirst
 */
export type UserFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User findMany
 */
export type UserFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User create
 */
export type UserCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User createMany
 */
export type UserCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User createManyAndReturn
 */
export type UserCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User update
 */
export type UserUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User updateMany
 */
export type UserUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User updateManyAndReturn
 */
export type UserUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User upsert
 */
export type UserUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User delete
 */
export type UserDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput
  relationLoadStrategy?: Prisma.RelationLoadStrategy
}

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to delete.
   */
  limit?: number
}

/**
 * User.profile
 */
export type User$profileArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Profile
   */
  select?: Prisma.ProfileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Profile
   */
  omit?: Prisma.ProfileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProfileInclude<ExtArgs> | null
  where?: Prisma.ProfileWhereInput
}

/**
 * User.ownedOrganizations
 */
export type User$ownedOrganizationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  where?: Prisma.OrganizationWhereInput
  orderBy?: Prisma.OrganizationOrderByWithRelationInput | Prisma.OrganizationOrderByWithRelationInput[]
  cursor?: Prisma.OrganizationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.OrganizationScalarFieldEnum | Prisma.OrganizationScalarFieldEnum[]
}

/**
 * User.moderatedLiveAuctions
 */
export type User$moderatedLiveAuctionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionLive
   */
  select?: Prisma.AuctionLiveSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionLive
   */
  omit?: Prisma.AuctionLiveOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionLiveInclude<ExtArgs> | null
  where?: Prisma.AuctionLiveWhereInput
  orderBy?: Prisma.AuctionLiveOrderByWithRelationInput | Prisma.AuctionLiveOrderByWithRelationInput[]
  cursor?: Prisma.AuctionLiveWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AuctionLiveScalarFieldEnum | Prisma.AuctionLiveScalarFieldEnum[]
}

/**
 * User.auctionListingsCreated
 */
export type User$auctionListingsCreatedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionListing
   */
  select?: Prisma.AuctionListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionListing
   */
  omit?: Prisma.AuctionListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionListingInclude<ExtArgs> | null
  where?: Prisma.AuctionListingWhereInput
  orderBy?: Prisma.AuctionListingOrderByWithRelationInput | Prisma.AuctionListingOrderByWithRelationInput[]
  cursor?: Prisma.AuctionListingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AuctionListingScalarFieldEnum | Prisma.AuctionListingScalarFieldEnum[]
}

/**
 * User.auctionListingsWon
 */
export type User$auctionListingsWonArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionListing
   */
  select?: Prisma.AuctionListingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionListing
   */
  omit?: Prisma.AuctionListingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionListingInclude<ExtArgs> | null
  where?: Prisma.AuctionListingWhereInput
  orderBy?: Prisma.AuctionListingOrderByWithRelationInput | Prisma.AuctionListingOrderByWithRelationInput[]
  cursor?: Prisma.AuctionListingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AuctionListingScalarFieldEnum | Prisma.AuctionListingScalarFieldEnum[]
}

/**
 * User.auctionBids
 */
export type User$auctionBidsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AuctionBid
   */
  select?: Prisma.AuctionBidSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AuctionBid
   */
  omit?: Prisma.AuctionBidOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AuctionBidInclude<ExtArgs> | null
  where?: Prisma.AuctionBidWhereInput
  orderBy?: Prisma.AuctionBidOrderByWithRelationInput | Prisma.AuctionBidOrderByWithRelationInput[]
  cursor?: Prisma.AuctionBidWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AuctionBidScalarFieldEnum | Prisma.AuctionBidScalarFieldEnum[]
}

/**
 * User without action
 */
export type UserDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
}
